# import subprocess

# class RSSI_Tarama:
#     def getRawNetworkScan(self, sudo=False):
#         command = ['iwlist', 'scan']
#         if sudo:
#             command.insert(0, 'sudo')

#         output = subprocess.run(command, capture_output=True, text=True)
#         return output.stdout

#     def getAPinfo(self, networks=None, sudo=False):
#         raw_output = self.getRawNetworkScan(sudo=sudo)
#         access_points = []

#         if raw_output:
#             lines = raw_output.split('\n')
#             cell_info = {}

#             for line in lines:
#                 if line.startswith('Cell'):
#                     if cell_info:
#                         access_points.append(cell_info)
#                     cell_info = {}
#                 elif line.strip():
#                     key, value = line.split(':', 1)
#                     cell_info[key.strip()] = value.strip()

#             if cell_info:
#                 access_points.append(cell_info)

#         parsed_output = []
#         for ap in access_points:
#             if networks is None or ap['ESSID'].replace('"', '') in networks:
#                 parsed_output.append({
#                     'ssid': ap['ESSID'].replace('"', ''),
#                     'quality': ap['Quality'].split('=')[1].split('/')[0],
#                     'signal': ap['Signal level'].split('=')[1].split(' ')[0]
#                 })

#         return parsed_output


# rssi_tarama = RSSI_Tarama()

# raw_output = rssi_tarama.getRawNetworkScan()
# print(raw_output)

# parsed_output = rssi_tarama.getAPinfo(networks=['ucrwpa', 'dd-wrt'], sudo=True)
# print(parsed_output)





import subprocess

class RSSI_Tarama:
    def getRawNetworkScan(self):
        output = subprocess.run(['netsh', 'wlan', 'show', 'network', 'mode=Bssid'], capture_output=True, text=True)
        return output.stdout

    def getAPinfo(self, networks=None):
        # Fonksiyonun geri kalan kısmı aynı kalabilir
        pass


rssi_tarama = RSSI_Tarama()

raw_output = rssi_tarama.getRawNetworkScan()
print(raw_output)

parsed_output = rssi_tarama.getAPinfo(networks=['ucrwpa', 'dd-wrt'])
print(parsed_output)

